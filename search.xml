<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Git 中配置 GItHub 账号]]></title>
    <url>%2F2019%2F9%2F6%2FGit-%E4%B8%AD%E9%85%8D%E7%BD%AE-GItHub-%E8%B4%A6%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[Git 中配置 GitHub 账号 为了方便将本地的内容推送到 GitHub 仓库中，将 GitHub 账号与 Git 绑定 step1：注册一个 GitHub 账号 step2：Git 中输入 ssh-keygen 生成 SSH 公钥 step3：Git 中输入 cat ~/.ssh/id_rsa.pub 回车，复制显示的 SSH 公钥的内容 step4：在 GitHub 中点击头像，选择 Settings 进入，在个人信息页面选择 SSH and GPG keys 进入 step5：点击 New SSH key ，输入标题（Title）和公钥（Key）即可配置成功 提示： 通过在 Git 中输入 cd ~/.ssh 后，再输入 ls 查看自己是否已经拥有秘钥，其中 id_rsa 为私钥，id_rsa.pub 为公钥 为了方便日后的管理，可以将 Title 设置为你的设备名称]]></content>
      <categories>
        <category>文档</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开始 hexo 博客写作之旅]]></title>
    <url>%2F2019%2F9%2F2%2F%E5%BC%80%E5%A7%8B-hexo-%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C%E4%B9%8B%E6%97%85%2F</url>
    <content type="text"><![CDATA[开始你的 hexo 博客写作之旅hexo 博客初始化位置：D:\myblog step1：打开 Git 控制台，输入 cd D:\myblog step2：创建一篇新文章 hexo new &quot;开始 hexo 博客写作之旅&quot; step3：在 D:\myblog\source\_posts 下找到 开始-hexo-博客写作之旅.md 文件，在里面写你想要的文章 step4：发表你的文章，Git 中输入 hexo g 生成静态文件，再输入 hexo s 打开服务器，在浏览器中输入 localhost:4000 即可看到你的文章]]></content>
      <categories>
        <category>文档</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[创建 hexo 博客]]></title>
    <url>%2F2019%2F8%2F30%2F%E5%88%9B%E5%BB%BA-hexo-%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[创建 hexo 博客步骤step1：官网安装 Node.js 和 Git step2：右键 Git Bash Here 输入 npm install -g hexo-cli 安装 hexo step3：创建博客所在目录，例如 D:\myblog ，在 Git 中使用 cd D:\myblog 打开目录 step4：初始化目录，输入 hexo init step5：生成静态文件，输入 hexo g step6：启动服务器，输入 hexo s 最后在浏览器中输入 localhost:4000 即可访问所创建的博客]]></content>
      <categories>
        <category>文档</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F7%2F6%2Fhello%20world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[markdown 文档入门]]></title>
    <url>%2F2019%2F5%2F16%2Fmarkdown%20%E6%96%87%E6%A1%A3%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[markdown 入门1、基本语法 添加图片（![文本描述]加上()) 也可以通过拖拽到页面的方式 引用(&gt;空格) 标题(#空格：一级标题；######空格：六级标题) 无序列表（*空格） 有序列表（1.空格） 任务列表（-空格[空格]空格） 代码块（~~~空格java） 数学公式（$$回车） 表格（|空格表头空格|空格表头空格|） 水平线（***或—） 斜字体（**或__中间加上文字） 强调（**或____中间加上文字） 删除线（~~~~中间加上文字） 下划线（中间加上文字） 链接（[链接名]加上(地址)） 代码块（中间加上代码） Emoji（:加上英文标识:）:happy: 2、进阶语法 生成目录（[toc]） 居中文字 .article { background-color: #cac; color: grey; border-left: 6px solid #c8c; padding: 8px 16px; } 3、自定义主题 文件–&gt;偏好设置–&gt;打开主题文件夹 创建 github.user.css 文件，如果选择 github 主题的话，则该文件起作用 创建 base.user.css 文件，该文件对所有样式均起作用 4、常用Emoji :sparkles: sparkles 添加新文件 :art: art 修改文件 :cold_sweat: cold_sweat 有疑问，需确认（非技术上的问题） :construction: construction 未完成 :bug: bug 有问题，需确认 :memo: memo（可能）还需要做的事情 :clap: clap 学到了，知道了 :question: question 需要研究一下 :exclamation: exclamation 需要注意，别忘了 :pushpin: pushpin 标记，告知，声明，常用 :x: x 纯删除，没有添加新的替代 :joy: joy 笑哭 :smirk:smirk 幸灾乐祸的笑 :pensive:pensive 忧郁 :stuck_out_tongue_winking_eye:stuck_out_tongue_winking_eye 调皮 :unamused:unamused 一脸不快 :octocat:octocat 章鱼猫]]></content>
      <categories>
        <category>文档</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>入门</tag>
      </tags>
  </entry>
</search>
